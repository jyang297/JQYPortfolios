---
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";

export async function getStaticPaths() {
  const projectContents = await getCollection("projectContents");

  return projectContents.map((project) => ({
    params: { slug: project.slug || project.id },
    props: { project },
  }));
}

const { project } = Astro.props;

if (!project) {
  throw new Error("No project data received");
}

// Handle content rendering
let Content;
if (project.rendered?.html) {
  Content = null; // Will use set:html
} else if (typeof project.render === 'function') {
  const rendered = await project.render();
  Content = rendered.Content;
}

const { title, description, date, technologies, status, github, demo, image } = project.data;
---

<Layout title={title}>
  <article>
    <!-- Hero Section -->
    <div style="background-color: var(--color-bg-secondary); padding: 4rem 0;">
      <div class="container" style="max-width: 900px;">
        <div style="margin-bottom: 1.5rem; display: flex; align-items: center; gap: 1rem; flex-wrap: wrap;">
          {status && (
            <span class={`tag ${status === 'Completed' ? 'tag-accent' : ''}`}>
              {status}
            </span>
          )}
          {date && (
            <span style="color: var(--color-text-secondary); font-size: 0.875rem;">
              {new Date(date).toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}
            </span>
          )}
        </div>
        <h1 style="margin-bottom: 1rem;">{title}</h1>
        {description && (
          <p style="font-size: 1.125rem; color: var(--color-text-secondary); margin-bottom: 2rem;">
            {description}
          </p>
        )}
        {technologies && technologies.length > 0 && (
          <div class="project-tech" style="margin-bottom: 2rem;">
            {technologies.map((tech: string) => (
              <span class="tag tag-accent">{tech}</span>
            ))}
          </div>
        )}
        {(github || demo) && (
          <div style="display: flex; gap: 1rem; flex-wrap: wrap;">
            {github && (
              <a href={github} target="_blank" rel="noopener noreferrer" class="btn btn-primary">
                View on GitHub
              </a>
            )}
            {demo && (
              <a href={demo} target="_blank" rel="noopener noreferrer" class="btn btn-secondary">
                Live Demo
              </a>
            )}
          </div>
        )}
      </div>
    </div>

    <!-- Featured Image -->
    {image && (
      <div class="container" style="max-width: 900px; margin-top: 3rem;">
        <img
          src={image}
          alt={title}
          style="width: 100%; border-radius: 0.75rem; box-shadow: var(--shadow-lg);"
        />
      </div>
    )}

    <!-- Content -->
    <div class="blog-content prose">
      {project.rendered?.html ? (
        <div set:html={project.rendered.html} />
      ) : Content ? (
        <Content />
      ) : (
        <p style="color: var(--color-text-secondary);">No content available for this project.</p>
      )}
    </div>

    <!-- Back to Projects -->
    <div class="container" style="max-width: 900px; margin-top: 3rem; margin-bottom: 4rem;">
      <a href="/projects" class="btn btn-ghost" style="padding-left: 0;">
        ‚Üê Back to Projects
      </a>
    </div>
  </article>
</Layout>

---
import BaseLayout from "@/layout/BaseLayout.astro";
---

<BaseLayout>
  <div class="grid-sm center-layout">
    <h1>Add New Book</h1>
    <p>To add a book to your library, search for it below.</p>
    <form id="new-book-search-form" class="grid-xs">
      <label>
        <span hidden>Add Book</span>
        <input
          type="search"
          placeholder="Search for a bookâ€¦"
          name="search"
          autofocus
          required
          autocomplete="off"
        />
      </label>
      <button type="submit" id="add-book-button" class="btn full-width">
        <span>Search</span>
        <svg
          width="24"
          height="24"
          class="loading"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
          ><defs
            ><linearGradient
              id="mingcuteLoadingFill0"
              x1="50%"
              x2="50%"
              y1="5.271%"
              y2="91.793%"
              ><stop offset="0%" stop-color="currentColor"></stop><stop
                offset="100%"
                stop-color="currentColor"
                stop-opacity=".55"></stop></linearGradient
            ><linearGradient
              id="mingcuteLoadingFill1"
              x1="50%"
              x2="50%"
              y1="15.24%"
              y2="87.15%"
              ><stop offset="0%" stop-color="currentColor" stop-opacity="0"
              ></stop><stop
                offset="100%"
                stop-color="currentColor"
                stop-opacity=".55"></stop></linearGradient
            ></defs
          ><g fill="none"
            ><path
              d="m12.593 23.258l-.011.002l-.071.035l-.02.004l-.014-.004l-.071-.035q-.016-.005-.024.005l-.004.01l-.017.428l.005.02l.01.013l.104.074l.015.004l.012-.004l.104-.074l.012-.016l.004-.017l-.017-.427q-.004-.016-.017-.018m.265-.113l-.013.002l-.185.093l-.01.01l-.003.011l.018.43l.005.012l.008.007l.201.093q.019.005.029-.008l.004-.014l-.034-.614q-.005-.018-.02-.022m-.715.002a.02.02 0 0 0-.027.006l-.006.014l-.034.614q.001.018.017.024l.015-.002l.201-.093l.01-.008l.004-.011l.017-.43l-.003-.012l-.01-.01z"
            ></path><path
              fill="url(#mingcuteLoadingFill0)"
              d="M8.749.021a1.5 1.5 0 0 1 .497 2.958A7.5 7.5 0 0 0 3 10.375a7.5 7.5 0 0 0 7.5 7.5v3c-5.799 0-10.5-4.7-10.5-10.5C0 5.23 3.726.865 8.749.021"
              transform="translate(1.5 1.625)"></path><path
              fill="url(#mingcuteLoadingFill1)"
              d="M15.392 2.673a1.5 1.5 0 0 1 2.119-.115A10.48 10.48 0 0 1 21 10.375c0 5.8-4.701 10.5-10.5 10.5v-3a7.5 7.5 0 0 0 5.007-13.084a1.5 1.5 0 0 1-.115-2.118"
              transform="translate(1.5 1.625)"></path></g
          ></svg
        >
      </button>
    </form>
  </div>
  <ul id="new-book-list" class="book-card-list"></ul>
</BaseLayout>

<script>
  import type { TBook } from "@/types/Books";

  const newBookSearchForm = document.querySelector(
    "#new-book-search-form"
  ) as HTMLFormElement;
  const newBookList = document.querySelector(
    "#new-book-list"
  ) as HTMLUListElement;

  // helper functions
  const renderBookCardHTML = (book: TBook) => `<li class="book-card">
    <img src="${book.cover}" alt="${book.title}" loading="lazy" decoding="async" class="book-cover" />
      <h2>${book.title}</h2>
      <p>by ${new Intl.ListFormat().format(book.author)}</p>
      <button class="add-book-checkbox btn" data-book=${encodeURIComponent(JSON.stringify(book))}>Add to Library</button>
    </li>`;

  // event listeners
  newBookSearchForm.addEventListener("submit", async (e) => {
    e.preventDefault();
    if (newBookSearchForm.hasAttribute("disabled")) {
      return;
    }

    try {
      const formData = new FormData(newBookSearchForm);
      const search = formData.get("search") as string;
      newBookSearchForm.setAttribute("disabled", "true");

      // sanitize input
      const res = await fetch(
        `/api/books.json?search=${encodeURIComponent(search)}`
      );

      if (!res.ok) {
        throw new Error("Unable to fetch books");
      }

      const { error, data } = await res.json();
      if (error) {
        throw new Error(error);
      }

      newBookList.innerHTML = data
        .map((book: TBook) => renderBookCardHTML(book))
        .join("");
      newBookSearchForm.removeAttribute("disabled");
    } catch (error) {
      console.error(error);
      newBookSearchForm.removeAttribute("disabled");
      alert(error instanceof Error ? error.message : "Unknown error");
    }
  });
</script>

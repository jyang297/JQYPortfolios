---
import type { CollectionEntry } from "astro:content";

// components
import Heading from "@/ui/Heading.astro";
import Link from "@/ui/Link.astro";
import { getEntry } from "astro:content";
import FormattedDate from "../ui/FormattedDate.astro";

type Props = {
  blog?: CollectionEntry<"blog">; // Support old 'blog' prop name
  post?: CollectionEntry<"blog">; // Support new 'post' prop name
  tagName: "h2" | "h3";
};

const { blog, post, tagName } = Astro.props;
const entry = blog || post; // Support either prop name

if (!entry) {
  throw new Error("BlogCard requires either 'blog' or 'post' prop");
}

const { title, image, description, pubDate } = entry.data;
const slug = entry.slug; // slug is auto-generated from filename

// Handle author - can be string or reference
let author;
if (entry.data.author && typeof entry.data.author === 'object') {
  author = await getEntry(entry.data.author.collection, entry.data.author.id);
} else if (typeof entry.data.author === 'string') {
  author = { data: { name: entry.data.author } };
}
---

<article aria-label={title} class="blog-card">
  {image && <img src={image} width={400} height={225} alt="" />}
  <div class="rows">
    <Heading tagName={tagName} tagSize="h3">{title}</Heading>
    <div class="columns">
      <FormattedDate pubDate={pubDate} />
      {author && <small>by {author.data.name}</small>}
    </div>
    <p>{description}</p>
    <Link href={`/blog/${slug}`}>Read blog</Link>
  </div>
</article>

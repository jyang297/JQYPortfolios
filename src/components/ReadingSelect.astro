---
import type { TBook } from "@/types/Books";

type Props = {
  selectData: Pick<TBook, "status" | "id">;
};

const { selectData } = Astro.props;

const { status, id } = selectData;
---

<div class="custom-select">
  <select class="reading-status-select" data-id={id}>
    <option value="to_read" selected={status === "to_read"}>To Read</option>
    <option value="reading" selected={status === "reading"}>Reading</option>
    <option value="read" selected={status === "read"}>Read</option>
  </select>
</div>

<script>
  const readingSelects = document.querySelectorAll(
    ".reading-status-select"
  ) as NodeListOf<HTMLSelectElement>;

  readingSelects.forEach((select) => {
    select.addEventListener("change", async (e) => {
      try {
        const res = await fetch(`/api/books/${select.dataset.id}.json`, {
          method: "PATCH",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            status: select.value,
          }),
        });

        if (!res.ok) {
          throw new Error("Failed to update status. Please try again");
        }

        const { data, error } = await res.json();

        if (error) {
          throw new Error(error);
        }

        // if on home, refresh
        if (window.location.pathname === "/") {
          window.location.reload();
        }
      } catch (error) {
        console.error(error);
        alert(error instanceof Error ? error.message : "Unknown error");
      }
    });
  });
</script>
